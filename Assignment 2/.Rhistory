ggplot(data_avocado %>% select(type),
aes(x=type,y=total_volume_sold)) +
geom_boxplot() + facet_wrap(~type) + ggtitle("Panel (b)")+ scale_y_log10()
ggplot(data_avocado, aes(x=type,y=total_volume_sold)) +
geom_boxplot() + facet_wrap(~type) + ggtitle("Panel (b)")+ scale_y_log10()
ggplot(data_avocado, aes(x=Date,y=total_volume_sold,group=Date)) +
geom_boxplot() + ggtitle("Panel (b)")+ scale_y_log10()
ggplot(data_avocado, aes(x=Date,y=total_volume_sold,group=Date)) +
geom_boxplot() + ggtitle("Panel (b)")+ scale_y_log10() + facet_grid(rows=vars(type))
view(data_avocado)
data_avocado %>%
mutate(Size = case_when(
select(small) ~ "Small",
select(medium) ~ "Medium",
select(large) ~ "Large"
))
data_avocado %>%
mutate(Size = case_when(
matches(col, "small") ~ "Small",
matches(col, "medium") ~ "Medium",
matches(col, "large") ~ "Large"
))
data_avocado %>%
mutate(Size = case_when(
matches(colnames("small")) ~ "Small",
matches(colnames("medium")) ~ "Medium",
matches(colnames("large")) ~ "Large"
))
data_avocado %>%
mutate(Size = case_when(
matches(colnames("small")) ~ "Small",
matches(colnames("medium")) ~ "Medium",
matches(colnames("large")) ~ "Large"
))
data_avocado %>%
mutate(Size = case_when(
matches(colnames("small")) ~ "Small",
matches(colnames("medium")) ~ "Medium",
matches(colnames("large")) ~ "Large"
))
rlang::last_error()
data_avocado %>%
mutate(Size = case_when(
("small" %in% colnames(data_avocado) == TRUE) ~ "Small",
("medium" %in% colnames(data_avocado) == TRUE)  ~ "Medium",
("large" %in% colnames(data_avocado) == TRUE) ~ "Large"
))
view(data_avocado)
library(tidyverse)
my_Costco_list <- list(
tibble(Item = c("Milk", "Coffee", "Lettuce","Pants"),
Amount = c(4,1,2,2),
Location = c("Refrigerated","Cereal","Refrigerated","Clothes"))
)
both_lists <- list(Costco = my_Costco_list,
IGA = tibble(
Item = c("Chicken", "Yogurt", "Pizza"),
Amount = c(2,3,1),
Location = c("Meat","Dairy","Frozen")))
my_Costco_list[[c(1, 3)]]
class(my_Costco_list[[c(1, 3)]])
factor(my_Costco_list[[c(1, 3)]])
class(my_Costco_list[[c(1, 3)]])
factor(my_Costco_list[[c(1, 3)]])
class(my_Costco_list[[c(1,3)]])
(my_Costco_list[[c(1, 3)]]) <- as.factor(my_Costco_list[[c(1, 3)]])
(my_Costco_list[[c(1, 3)]]) <- factor(my_Costco_list[[c(1, 3)]])
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]])
class(my_Costco_list[[c(1, 3)]])
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], levels = "Clothes", "Cereal", "Refrigerated")
attributes(my_Costco_list[[c(1, 3)]])
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], levels = c("Clothes", "Cereal", "Refrigerated"))
attributes(my_Costco_list[[c(1, 3)]])
my_Costco_list
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], levels = c("Clothes", "Cereal", "Refrigerated"))
my_Costco_list
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], fct_relevel(Location, c("Clothes", "Cereal", "Refrigerated"))
my_Costco_list
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], fct_relevel(Location, c("Clothes", "Cereal", "Refrigerated")))
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], fct_relevel(my_Costco_list[[c(1, 3)]], c("Clothes", "Cereal", "Refrigerated")))
my_Costco_list
attributes(my_Costco_list[[c(1, 3)]])
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], fct_relevel(my_Costco_list[[c(1, 3)]], c("Clothes", "Cereal", "Refrigerated")))
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], levels = c("Clothes", "Cereal", "Refrigerated"))
attributes(my_Costco_list[[c(1, 3)]])
my_Costco_list
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], levels = c("Clothes", "Cereal", "Refrigerated"), na.rm = TRUE)
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], levels = c("Clothes", "Cereal", "Refrigerated"), na.rm = TRUE)
my_Costco_list
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], levels = c("Clothes", "Cereal", "Refrigerated"))
my_Costco_list
my_Costco_list[[c(1, 3)]]
cobalt <- my_Costco_list[[c(1, 3)]]
my_Costco_list[[c(1, 3)]] <- factor(cobalt, levels = c("Clothes", "Cereal", "Refrigerated"))
cobalt
my_Costco_list[[c(1, 3)]]
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1, 3)]], levels = c("Clothes", "Cereal", "Refrigerated"))
my_Costco_list[[c(1, 3)]]
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[1]][3], levels = c("Clothes", "Cereal", "Refrigerated"))
my_Costco_list[[c(1, 3)]]
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[c(1,3)], levels = c("Clothes", "Cereal", "Refrigerated"))
my_Costco_list[c(1, 3)]
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1,3)]], levels = c("Clothes", "Cereal", "Refrigerated"))
my_Costco_list[[c(1, 3)]]
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1,3)]], levels = c("Clothes", "Cereal", "Refrigerated"))
my_Costco_list[[c(1, 3)]]
library(tidyverse)
my_Costco_list <- list(
tibble(Item = c("Milk", "Coffee", "Lettuce","Pants"),
Amount = c(4,1,2,2),
Location = c("Refrigerated","Cereal","Refrigerated","Clothes"))
)
both_lists <- list(Costco = my_Costco_list,
IGA = tibble(
Item = c("Chicken", "Yogurt", "Pizza"),
Amount = c(2,3,1),
Location = c("Meat","Dairy","Frozen")))
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1,3)]], levels = c("Clothes", "Cereal", "Refrigerated"))
my_Costco_list[[c(1, 3)]]
my_Costco_list[[c(1, 3)]][1]
my_Costco_list[[c(1, 3)]][2]
my_Costco_list[[c(1, 3)]][3]
my_Costco_list[[c(1, 3)]][4]
count(my_Costco_list[[c(1, 3)]])
count(my_Costco_list[[c(1, 3)]])
my_Costco_list %>% group_by(Location) %>% summarise(Count = n())
my_Costco_list[[c(1, 3)]] %>% group_by(Location) %>% summarise(Count = n())
my_Costco_list[[1]] %>% group_by(Location) %>% summarise(Count = n())
my_Costco_list[[1]] <- my_Costco_list[[1]] %>% group_by(Location) %>% summarise(Count = n()) %>% mutate(min_amount = count*Amount))
my_Costco_list[[1]] <- my_Costco_list[[1]] %>% group_by(Location) %>% summarise(Count = n()) %>% mutate(min_amount = count*Amount)
my_Costco_list[[1]] <- my_Costco_list[[1]] %>% group_by(Location) %>% summarise(Count = n()) %>% mutate(min_amount = count*my_Costco_list[[c(1,2)]])
rlang::last_error()
my_Costco_list[[1]]
my_Costco_list[[1]] <- my_Costco_list[[1]] %>% group_by(Location) %>% summarise(Count = n()) %>% mutate(min_amount = my_Costco_list[[c(1,2)]])
my_Costco_list[[1]] <- my_Costco_list[[1]] %>% group_by(Location) %>% summarise(Count = n()) %>% mutate(min_amount = my_Costco_list[[c(1,2)]][])
my_Costco_list[[1]] <- my_Costco_list[[1]] %>% group_by(Location) %>% summarise(Count = n()) %>% mutate(min_amount = Count+1)
my_Costco_list[[1]]
wow <- my_Costco_list[[1]]
my_Costco_list[[1]]
my_Costco_list[[1]] <- my_Costco_list[[1]] %>% group_by(Location) %>% summarise(Count = n()) %>% mutate(min_amount = sum(colnames(my_Costco_list[[c(1,2)]])))
my_Costco_list[[1]]
my_Costco_list[[1]] <- my_Costco_list[[1]] %>% group_by(Location) %>% summarise(Count = n())
my_Costco_list[[1]]
library(tidyverse)
my_Costco_list <- list(
tibble(Item = c("Milk", "Coffee", "Lettuce","Pants"),
Amount = c(4,1,2,2),
Location = c("Refrigerated","Cereal","Refrigerated","Clothes"))
)
my_Costco_list[[c(1, 3)]] <- factor(my_Costco_list[[c(1,3)]], levels = c("Clothes", "Cereal", "Refrigerated"))
my_Costco_list[[1]]
my_Costco_list[[c(1,3)]]
my_Costco_list[[1]] %>% group_by(Location) %>% summarise(Min_Amount = sum(Amount))
library(tidyverse)
second_smallest <- function(x){
modified_vector<-sort(x)[-1]
modified_vector[1]
"is the second smallest number"
}
second_smallest(c(4,3,2,1))
roots_from_quadratic_formula<-function(A,B,C){
(-B + c(-1,1)*sqrt(B^2 - 4*A*C))/
2*A
}
roots_from_quadratic_formula(-4,3,A=1)
library(tidyverse)
heart_tbl<-read_csv("heart.csv")
view(heart_tbl)
setwd("~/McGill University/Fall 2021/MATH 208/Assignment 2")
library(tidyverse)
heart_tbl<-read_csv("heart.csv")
view(heart_tbl)
ncol(heart_tbl)
nrow(heart_tbl)
ggplot(heart_tbl, aes(x=Age, group=Sex, fill=Sex)) + geom_histogram(bins=918, col="black") + facet_grid(rows=vars(Sex))
ggplot(heart_tbl, aes(x=Age, group=Sex, fill=Sex)) + geom_histogram(bins=20, col="black") + facet_grid(rows=vars(Sex))
ggplot(heart_tbl, aes(x=Age, group=Sex, fill=Sex)) + geom_histogram(bins=20, col="black") + facet_grid(rows=vars(Sex)) + ylab("RestingBP")
ggplot(heart_tbl, aes(x=Age, y= RestingBP, group=Sex, fill=Sex)) + geom_histogram(bins=20, col="black") + facet_grid(rows=vars(Sex)) + ylab("RestingBP")
ggplot(heart_tbl, aes(x=Age, group=Sex, fill=Sex)) + geom_histogram(bins=20, col="black") + facet_grid(rows=vars(Sex)) + ylab("RestingBP")
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_point() + facet_grid(rows=vars(Sex))
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_point()
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line()
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line() + facet_grid(rows=vars(Sex))
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_point() + facet_grid(rows=vars(Sex))
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_point()
ggplot(heart_tbl, aes(y=RestingBP, col=Sex)) + geom_histogram()
ggplot(heart_tbl, aes(x=RestingBP, col=Sex)) + geom_histogram()
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line()
ggplot(heart_tbl, aes(x=Sex, y=RestingBP, col=Sex)) + geom_line()
ggplot(heart_tbl, aes(x=Sex, y=RestingBP, col=Age)) + geom_line()
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line()
ggplot(heart_tbl, aes(x=RestingECG, y=ChestPainType, fill=ChestPainType)) + geom_bar()
ggplot(heart_tbl, aes(x=RestingECG, y=ChestPainType, fill=ChestPainType)) + geom_bar(stat="ChestPainType")
ggplot(heart_tbl, aes(x=RestingECG, y=ChestPainType, fill=ChestPainType)) + geom_bar(stat="identity")
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line() +geom_smooth(method = "lm", col="black")
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line() +geom_smooth(method = "glm", col="black")
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line() +geom_smooth(method = "gam", col="black")
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line() +geom_smooth(method = "loess", col="black")
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line() +geom_smooth(method = "loess", col="black") + facet_wrap(rows=vars(Sex))
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line() +geom_smooth(method = "loess", col="black") + facet_grid(rows=vars(Sex))
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line() +geom_smooth(method = "lm", col="black") + facet_grid(rows=vars(Sex))
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line() +geom_smooth(method = "lm", col="black")
ggplot(heart_tbl, aes(x=RestingECG, y=ChestPainType, fill=ChestPainType)) + geom_bar(stat="identity")
ggplot(heart_tbl, aes(x=Age, y=RestingBP, col=Sex)) + geom_line()
ggplot(heart_tbl, aes(x=RestingECG, y=ChestPainType, fill=ChestPainType)) + geom_bar(stat="identity")
ggplot(heart_tbl, aes(x=RestingECG, fill=ChestPainType)) + geom_bar(stat="identity")
ggplot(heart_tbl, aes(x=RestingECG, y=Count, fill=ChestPainType)) + geom_bar(stat="identity")
ggplot(heart_tbl, aes(x=RestingECG, y=ChestPainType, fill=ChestPainType)) + geom_bar(stat="identity")
Sex = "F" & ChestPainType = "TA" ~ 'Female & TA')
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex = "M" & ChestPainType = "ASY" ~ 'Male & ASY',
Sex = "M" & ChestPainType = "ATA" ~ 'Male & ATA',
Sex = "M" & ChestPainType = "NAP" ~ 'Male & NAP',
Sex = "M" & ChestPainType = "TA" ~ 'Male & TA',
Sex = "F" & ChestPainType = "ASY" ~ 'Female & ASY',
Sex = "F" & ChestPainType = "ATA" ~ 'Female & ATA',
Sex = "F" & ChestPainType = "NAP" ~ 'Female & NAP',
Sex = "F" & ChestPainType = "TA" ~ 'Female & TA'))
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex = "M" & ChestPainType = "ASY" ~ 'Male & ASY',
Sex = "M" & ChestPainType = "ATA" ~ 'Male & ATA',
Sex = "M" & ChestPainType = "NAP" ~ 'Male & NAP',
Sex = "M" & ChestPainType = "TA" ~ 'Male & TA',
Sex = "F" & ChestPainType = "ASY" ~ 'Female & ASY',
Sex = "F" & ChestPainType = "ATA" ~ 'Female & ATA',
Sex = "F" & ChestPainType = "NAP" ~ 'Female & NAP',
Sex = "F" & ChestPainType = "TA" ~ 'Female & TA'))
library(tidyverse)
heart_tbl<-read_csv("heart.csv")
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex = "M" & ChestPainType = "ASY" ~ 'Male & ASY',
Sex = "M" & ChestPainType = "ATA" ~ 'Male & ATA',
Sex = "M" & ChestPainType = "NAP" ~ 'Male & NAP',
Sex = "M" & ChestPainType = "TA" ~ 'Male & TA',
Sex = "F" & ChestPainType = "ASY" ~ 'Female & ASY',
Sex = "F" & ChestPainType = "ATA" ~ 'Female & ATA',
Sex = "F" & ChestPainType = "NAP" ~ 'Female & NAP',
Sex = "F" & ChestPainType = "TA" ~ 'Female & TA'))
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex = M & ChestPainType = ASY ~ 'Male & ASY',
Sex = M & ChestPainType = ATA ~ 'Male & ATA',
Sex = M & ChestPainType = NAP ~ 'Male & NAP',
Sex = M & ChestPainType = TA ~ 'Male & TA',
Sex = F & ChestPainType = ASY ~ 'Female & ASY',
Sex = F & ChestPainType = ATA ~ 'Female & ATA',
Sex = F & ChestPainType = NAP ~ 'Female & NAP',
Sex = F & ChestPainType = TA ~ 'Female & TA'))
library(dplyr)
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex = M & ChestPainType = ASY ~ 'Male & ASY',
Sex = M & ChestPainType = ATA ~ 'Male & ATA',
Sex = M & ChestPainType = NAP ~ 'Male & NAP',
Sex = M & ChestPainType = TA ~ 'Male & TA',
Sex = F & ChestPainType = ASY ~ 'Female & ASY',
Sex = F & ChestPainType = ATA ~ 'Female & ATA',
Sex = F & ChestPainType = NAP ~ 'Female & NAP',
Sex = F & ChestPainType = TA ~ 'Female & TA'))
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex = M & ChestPainType = ASY ~ 'Male & ASY',
Sex = M & ChestPainType = ATA ~ 'Male & ATA',
Sex = M & ChestPainType = NAP ~ 'Male & NAP',
Sex = M & ChestPainType = TA ~ 'Male & TA',
Sex = F & ChestPainType = ASY ~ 'Female & ASY',
Sex = F & ChestPainType = ATA ~ 'Female & ATA',
Sex = F & ChestPainType = NAP ~ 'Female & NAP',
Sex = F & ChestPainType = TA ~ 'Female & TA'))
heart_tbl<-read_csv("heart.csv")
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex = M & ChestPainType = ASY ~ 'Male & ASY',
Sex = M & ChestPainType = ATA ~ 'Male & ATA',
Sex = M & ChestPainType = NAP ~ 'Male & NAP',
Sex = M & ChestPainType = TA ~ 'Male & TA',
Sex = F & ChestPainType = ASY ~ 'Female & ASY',
Sex = F & ChestPainType = ATA ~ 'Female & ATA',
Sex = F & ChestPainType = NAP ~ 'Female & NAP',
Sex = F & ChestPainType = TA ~ 'Female & TA'))
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex = M & ChestPainType = ASY ~ "Male & ASY",
Sex = M & ChestPainType = ATA ~ "Male & ATA",
Sex = M & ChestPainType = NAP ~ "Male & NAP",
Sex = M & ChestPainType = TA ~ "Male & TA",
Sex = F & ChestPainType = ASY ~ "Female & ASY",
Sex = F & ChestPainType = ATA ~ "Female & ATA",
Sex = F & ChestPainType = NAP ~ "Female & NAP",
Sex = F & ChestPainType = TA ~ "Female & TA"))
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex == M & ChestPainType == ASY ~ "Male & ASY",
Sex == M & ChestPainType == ATA ~ "Male & ATA",
Sex == M & ChestPainType == NAP ~ "Male & NAP",
Sex == M & ChestPainType == TA ~ "Male & TA",
Sex == F & ChestPainType == ASY ~ "Female & ASY",
Sex == F & ChestPainType == ATA ~ "Female & ATA",
Sex == F & ChestPainType == NAP ~ "Female & NAP",
Sex == F & ChestPainType == TA ~ "Female & TA"))
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex == "M" & ChestPainType == ASY ~ "Male & ASY",
Sex == "M" & ChestPainType == ATA ~ "Male & ATA",
Sex == "M" & ChestPainType == NAP ~ "Male & NAP",
Sex == "M" & ChestPainType == TA ~ "Male & TA",
Sex == "F" & ChestPainType == ASY ~ "Female & ASY",
Sex == "F" & ChestPainType == ATA ~ "Female & ATA",
Sex == "F" & ChestPainType == NAP ~ "Female & NAP",
Sex == "F" & ChestPainType == TA ~ "Female & TA"))
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex == "M" & ChestPainType == "ASY" ~ "Male & ASY",
Sex == "M" & ChestPainType == "ATA" ~ "Male & ATA",
Sex == "M" & ChestPainType == "NAP" ~ "Male & NAP",
Sex == "M" & ChestPainType == "TA" ~ "Male & TA",
Sex == "F" & ChestPainType == "ASY" ~ "Female & ASY",
Sex == "F" & ChestPainType == "ATA" ~ "Female & ATA",
Sex == "F" & ChestPainType == "NAP" ~ "Female & NAP",
Sex == "F" & ChestPainType == "TA" ~ "Female & TA"))
heart_tbl %>% group_by(Combination) >%> summarise(count=n(RestingECG)) >%> mutate(prop=count/sum(count))
heart_tbl %>% group_by(Combination) >%> summarise(count=n()) >%> mutate(prop=count/sum(count))
heart_tbl %>% group_by(Combination) >%> summrarise(count=n()) >%> mutate(prop=count/sum(count))
heart_tbl %>% group_by(Combination) %>% summrarise(count=n()) %>% mutate(prop=count/sum(count))
heart_tbl %>% group_by(Combination) %>% summarise(count=n()) %>% mutate(prop=count/sum(count))
heart_tbl %>% group_by(Combination) %>% summarise(count=n(RestingECG)) %>% mutate(prop=count/sum(count))
My_Table <- table(heart_tbl)
heart_tbl_1 <- heart_tbl %>% transmute(Combination = case_when(Sex == "M" & ChestPainType == "ASY" ~ "Male & ASY",
Sex == "M" & ChestPainType == "ATA" ~ "Male & ATA",
Sex == "M" & ChestPainType == "NAP" ~ "Male & NAP",
Sex == "M" & ChestPainType == "TA" ~ "Male & TA",
Sex == "F" & ChestPainType == "ASY" ~ "Female & ASY",
Sex == "F" & ChestPainType == "ATA" ~ "Female & ATA",
Sex == "F" & ChestPainType == "NAP" ~ "Female & NAP",
Sex == "F" & ChestPainType == "TA" ~ "Female & TA"))
heart_tbl_1 <- table(heart_tbl_1)
heart_tbl_1
heart_tbl_1 <- table(heart_tbl_1, RestingECG)
heart_tbl_1 <- table(heart_tbl, RestingECG)
heart_tbl_1 <- heart_tbl %>% mutate(Combination = case_when(Sex == "M" & ChestPainType == "ASY" ~ "Male & ASY",
Sex == "M" & ChestPainType == "ATA" ~ "Male & ATA",
Sex == "M" & ChestPainType == "NAP" ~ "Male & NAP",
Sex == "M" & ChestPainType == "TA" ~ "Male & TA",
Sex == "F" & ChestPainType == "ASY" ~ "Female & ASY",
Sex == "F" & ChestPainType == "ATA" ~ "Female & ATA",
Sex == "F" & ChestPainType == "NAP" ~ "Female & NAP",
Sex == "F" & ChestPainType == "TA" ~ "Female & TA"))
heart_tbl_1 <- table(heart_tbl, RestingECG)
heart_tbl_1 <- table(heart_tbl_1, RestingECG)
heart_tbl_1
heart_tbl_1 <- table(Combination, RestingECG)
heart_tbl <- heart_tbl %>% mutate(Combination = case_when(Sex == "M" & ChestPainType == "ASY" ~ "Male & ASY",
Sex == "M" & ChestPainType == "ATA" ~ "Male & ATA",
Sex == "M" & ChestPainType == "NAP" ~ "Male & NAP",
Sex == "M" & ChestPainType == "TA" ~ "Male & TA",
Sex == "F" & ChestPainType == "ASY" ~ "Female & ASY",
Sex == "F" & ChestPainType == "ATA" ~ "Female & ATA",
Sex == "F" & ChestPainType == "NAP" ~ "Female & NAP",
Sex == "F" & ChestPainType == "TA" ~ "Female & TA"))
library(gmodels)
require(gmodels)
CrossTable(heart_tbl$Combination, heart_tbl$RestingECG)
xtabs(~ Combination + RestingECG, data = heart_tbl)
crosstabs <- xtabs(~ Combination + RestingECG, data = heart_tbl)
crosstabs
crosstabs <- crosstabs %>% mutate(prop.table(crosstabs, 1))
prop.table(crosstabs, 1)
crossbats <- prop.table(crosstabs, 1)
crosstabs <- crosstabs %>% crossbats
crosstabs <- crosstabs %>% mutate(crossbats)
crosstabs <- xtabs(~ Combination + RestingECG, data = heart_tbl, prop.table(crosstabs, 1))
crosstabs
crosstabs <- xtabs(~ Combination + RestingECG, data = heart_tbl)
crosstabs
crossbats <- prop.table(crosstabs,1)
merge(x = crosstabs, y = crossbats, by = "Combination", all = TRUE)
merge(x = crosstabs, y = crossbats, by = "Combination", all.x = TRUE)
merge(x = crosstabs, y = crossbats, by = "Combination", all.y = TRUE)
merge(x = crosstabs, y = crossbats, by = "Combination", all = FALSE)
merge(x = crosstabs, y = crossbats, by = NULL)
rbind(x = crosstabs, y = crossbats)
final_table <- crosstabs %>% semi_join(crossbats, by = "Combination")
crosstabs
crossbats
final_table <- merge(x = crosstabs, y = crossbats, by = "Combination")
final_table
crosstabs
crossbats
library(tidyverse)
heart_tbl <- read_csv("heart.csv")
heart_tbl
mean(RestingBP)
mean()
mean(heart_tbl$RestingBP)
heart_tbl_1 <- heart_tbl %>% group_by(ChestPainType) %>% summarise_at(vars(RestingBP:FastingBS), mean)
heart_tbl_1
heart_tbl_2 <-  heart_tbl %>% group_by(ChestPainType) %>% summarise_at(vars(RestingBP:FastingBS), median)
heart_tbl_2
heart_tbl_3 <-  heart_tbl %>% group_by(ChestPainType) %>% summarise_at(vars(RestingBP:FastingBS), IQR)
heart_tbl_3
heart_tbl_1 <- heart_tbl %>% group_by(ChestPainType) %>% summarise_at(vars(RestingBP:FastingBS + MaxHR), mean)
heart_tbl_1 <- heart_tbl %>% group_by(ChestPainType) %>% summarise_at(vars(RestingBP:FastingBS, MaxHR), mean)
heart_tbl_1
heart_tbl_2 <-  heart_tbl %>% group_by(ChestPainType) %>% summarise_at(vars(RestingBP:FastingBS, MaxHR), median)
heart_tbl_2
heart_tbl_3 <-  heart_tbl %>% group_by(ChestPainType) %>% summarise_at(vars(RestingBP:FastingBS, MaxHR), IQR)
heart_tbl_3
df <- merge(x=a,y=b,by.x="ChestPainType",by.y = "ChestPainType",all= T)
df <- merge(x=heart_tbl_1,y=heart_tbl_2,z=heart_tbl_3,by.x="ChestPainType",by.y = "ChestPainType",by.z="ChestPainType",all= T)
df
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP, col=Sex)) + geom_line() + geom_smooth()
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP)) + geom_line() + geom_smooth()
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP)) + geom_point() + geom_smooth()
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP)) + geom_point()
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP)) + geom_histogram()
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP)) + geom_histogram(stat = "identity")
ggplot(heart_tbl, aes(x=RestingBP, y=HeartDisease)) + geom_histogram(stat = "identity")
ggplot(heart_tbl, aes(x=RestingBP, y=HeartDisease)) + geom_point()
ggplot(heart_tbl, aes(x=RestingBP, y=HeartDisease)) + geom_line()
ggplot(heart_tbl, aes(x=HeartDisease, y=HeartDisease)) + geom_line() + geom_smooth(method = "loess")
ggplot(heart_tbl, aes(x=HeartDisease, y=HeartDisease)) + geom_point() + geom_smooth(method = "loess")
ggplot(heart_tbl, aes(x=RestingBP, y=HeartDisease)) + geom_point() + geom_smooth(method = "loess")
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP)) + geom_point() + geom_smooth(method = "loess")
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP)) + geom_boxplot() + geom_smooth(method = "loess")
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP, fill = HeartDisease)) + stat_boxplot(geom = "errorbar") + geom_boxplot() = geom_smooth(method = "loess")
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP, fill = HeartDisease)) + stat_boxplot(geom = "errorbar") + geom_boxplot() + geom_smooth(method = "loess")
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP, fill = HeartDisease)) + stat_boxplot(geom = "errorbar") + geom_boxplot()
ggplot(heart_tbl, aes(x=Sex, y=RestingBP, fill = Sex)) + stat_boxplot(geom = "errorbar") + geom_boxplot()
ggplot(heart_tbl, aes(x=Sex, y=RestingBP, fill = Sex)) + stat_boxplot(geom = "errorbar") + geom_boxplot(~HeartDisease)
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP, fill = HeartDisease)) + stat_boxplot(geom = "errorbar") + geom_boxplot(~HeartDisease)
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP, fill = HeartDisease)) + boxplot(heart_tbl~HeartDisease)
boxplot(heart_tbl~HeartDisease)
boxplot(RestingBP)
HDBoolean <- cut(Height, breaks=c(0,0.99,1), labels=c("Heart Disease", "No Heart Disease"))
HDBoolean <- cut(HeartDisease, breaks=c(0,0.99,1), labels=c("Heart Disease", "No Heart Disease"))
HDBoolean <- cut(heart_tbl$HeartDisease, breaks=c(0,0.99,1), labels=c("Heart Disease", "No Heart Disease"))
ggplot(heart_tbl, aes(x=HDBoolean, y=RestingBP)) + geom_boxplot()
HDBoolean <- cut(heart_tbl$HeartDisease, breaks=c(0,1), labels=c("Heart Disease", "No Heart Disease"))
HDBoolean <- cut(heart_tbl$HeartDisease, breaks=c(0,0.5,1), labels=c("Heart Disease", "No Heart Disease"))
ggplot(heart_tbl, aes(x=HDBoolean, y=RestingBP)) + geom_boxplot()
HDBoolean <- cut(heart_tbl$HeartDisease, breaks=c(0,0.5,1.1), labels=c("Heart Disease", "No Heart Disease"))
ggplot(heart_tbl, aes(x=HDBoolean, y=RestingBP)) + geom_boxplot()
HDBoolean <- cut(heart_tbl$HeartDisease, breaks=c(0,0.5,1.1), labels=c("Heart Disease", "No Heart Disease"), right = false)
HDBoolean <- cut(heart_tbl$HeartDisease, breaks=c(0,0.5,1.1), labels=c("Heart Disease", "No Heart Disease"), right = FALSE)
ggplot(heart_tbl, aes(x=HDBoolean, y=RestingBP)) + geom_boxplot()
Heart_Disease <- cut(heart_tbl$HeartDisease, breaks=c(0,0.5,1.1), labels=c("Heart Disease", "No Heart Disease"), right = FALSE)
ggplot(heart_tbl, aes(x=HDBoolean, y=RestingBP)) + geom_boxplot()
library(tidyverse)
heart_tbl <- read_csv("heart.csv")
Heart_Disease <- cut(heart_tbl$HeartDisease, breaks=c(0,0.5,1.1), labels=c("Heart Disease", "No Heart Disease"), right = FALSE)
ggplot(heart_tbl, aes(x=HDBoolean, y=RestingBP)) + geom_boxplot()
ggplot(heart_tbl, aes(x=Heart_Disease, y=RestingBP, fill=Heart_Disease)) + stat_boxplot(geom="errorbar", widht = 0.2) + geom_boxplot()
ggplot(heart_tbl, aes(x=HeartDisease, y=RestingBP, fill=HeartDisease)) + stat_boxplot(geom="errorbar", widht = 0.2) + geom_boxplot()
ggplot(heart_tbl, aes(x=Heart_Disease, y=RestingBP, fill=Heart_Disease)) + stat_boxplot(geom="errorbar", widht = 0.2) + geom_boxplot()
ggplot(heart_tbl, aes(x=Heart_Disease, y=Cholesterol, fill=Heart_Disease)) + stat_boxplot(geom="errorbar", widht = 0.2) + geom_boxplot()
ggplot(heart_tbl, aes(x=Heart_Disease, y=Cholesterol, fill=Heart_Disease)) + stat_boxplot(geom="errorbar", width = 0.2) + geom_boxplot()
ggplot(heart_tbl, aes(x=Heart_Disease, y=FastingBS, fill=Heart_Disease)) + stat_boxplot(geom="errorbar", width = 0.2) + geom_boxplot()
ggplot(heart_tbl, aes(x=Heart_Disease, y=MaxHR, fill=Heart_Disease)) + stat_boxplot(geom="errorbar", width = 0.2) + geom_boxplot()
Heart_Disease <- cut(heart_tbl$HeartDisease, breaks=c(0,0.5,1.1), labels=c("Normal", "Heart Disease"), right = FALSE)
ggplot(heart_tbl, aes(x=Heart_Disease, y=MaxHR, fill=Heart_Disease)) + stat_boxplot(geom="errorbar", width = 0.2) + geom_boxplot()
ggplot(heart_tbl, aes(x=Heart_Disease, y=RestingBP, fill=Heart_Disease)) + stat_boxplot(geom="errorbar", width = 0.2) + geom_boxplot()
ggplot(heart_tbl, aes(x=Heart_Disease, y=Cholesterol, fill=Heart_Disease)) + stat_boxplot(geom="errorbar", width = 0.2) + geom_boxplot()
Fasting_BS <- cut(heart_tbl$FastingBS, breaks = c(0,0.5,1.1)), labels=c("less than 120mg/dl", "greater than 120mg/dl"), right = FALSE)
Fasting_BS <- cut(heart_tbl$FastingBS, breaks = c(0,0.5,1.1)), labels=c("less than 120mg/dl", "greater than 120mg/dl"), right = FALSE)
Fasting_BS <- cut(heart_tbl$FastingBS, breaks = c(0,0.5,1.1), labels=c("less than 120mg/dl", "greater than 120mg/dl"), right = FALSE)
ggplot(heart_tbl, aes(x=Heart_Disease, y=Fasting_BS, fill=Heart_Disease)) + stat_boxplot(geom="errorbar", width = 0.2) + geom_boxplot()
library(ggmosaic)
install.packages(ggmosaic)
install.packages(ggmosaic)
# install.packages("devtools")
devtools::install_github("haleyjeppson/ggmosaic")
devtools::install_github("haleyjeppson/ggmosaic")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("haleyjeppson/ggmosaic")
library(ggmosaic)
library(ggplot2)
library(tidyverse)
heart_tbl<-read_csv("heart.csv")
Heart_Disease <- cut(heart_tbl$HeartDisease, breaks=c(0,0.5,1.1), labels=c("Normal", "Heart Disease"), right = FALSE)
Fasting_BS <- cut(heart_tbl$FastingBS, breaks = c(0,0.5,1.1), labels=c("less than 120mg/dl", "greater than 120mg/dl"), right = FALSE)
finals <- table(Heart_Disease, Fasting_BS)
mosaicplot(finals)
Heart Disease vs FastingBS <- table(Heart_Disease, Fasting_BS)
HeartDisease_vs_FastingBS <- table(Heart_Disease, Fasting_BS)
mosaicplot(HeartDisease_vs_FastingBS)
heart_tbl %>% group_by(ChestPainType) %>% summarise_at(vars(RestingBP,Cholesterol,FastingBS,MaxHR),list(mean=mean,
median=median,IQR=IQR)) %>%
pivot_longer(cols=c(ends_with("mean"),ends_with("median"),ends_with("IQR")), names_to="Var_Statistic") %>%
pivot_wider(id_cols="Var_Statistic",names_from="ChestPainType")
heart_tbl %>% group_by(ChestPainType) %>% summarise_at(vars(RestingBP,Cholesterol,FastingBS,MaxHR),list(mean=mean,
median=median,IQR=IQR)) %>%
pivot_longer(cols=c(ends_with("mean"),ends_with("median"),ends_with("IQR")), names_to="Var_Statistic") %>%
pivot_wider(id_cols="Summary_Statistic",names_from="ChestPainType")
heart_tbl %>% group_by(ChestPainType) %>% summarise_at(vars(RestingBP,Cholesterol,FastingBS,MaxHR),list(mean=mean,
median=median,IQR=IQR)) %>%
pivot_longer(cols=c(ends_with("mean"),ends_with("median"),ends_with("IQR")), names_to="Summary_Statistic") %>%
pivot_wider(id_cols="Summary_Statistic",names_from="ChestPainType")
summary_table%>% slice(sample(1:nrow(.), 15))
summary_table%>% slice(sample(1:nrow(.), 15))
summary_table <- heart_tbl %>% mutate(RestingECG =
fct_explicit_na(RestingECG)) %>%
group_by(Sex, ChestPainType, RestingECG) %>%
count() %>% group_by(ChestPainType) %>% mutate(prop = n/sum(n))
summary_table%>% slice(sample(1:nrow(.), 15))
summary_table <- heart_tbl %>% mutate(RestingECG =
fct_explicit_na(RestingECG)) %>%
group_by(Sex, ChestPainType, RestingECG) %>%
count() %>% group_by(ChestPainType) %>% mutate(proportion = n/sum(n))
summary_table%>% slice(sample(1:nrow(.), 15))
%>% group_by(ChestPainType) %>% mutate(proportion = n/sum(n))
summary_table %>% slice(sample(1:nrow(.), 15))
ggplot(heart_tbl, aes(x=RestingBP, y=MaxHR)) + geom_bin2d(bins=100)
ggplot(heart_tbl, aes(x=MaxHR, y=RestingBP)) + geom_bin2d(bins=100)
ggplot(heart_tbl, aes(x=MaxHR, y=RestingBP)) + geom_bin2d(bins=100) + scale_fill_continuous(type="viridis")
ggplot(heart_tbl, aes(x=MaxHR, y=RestingBP)) + geom_point(size=0.1) + geom_density_2d(col="red")
ggplot(heart_tbl, aes(x=MaxHR, y=RestingBP)) + stat_density_2d(bins=50, aes(fill = ..level..), geom = "ploygon")
ggplot(heart_tbl, aes(x=MaxHR, y=RestingBP)) + stat_density_2d(bins=50, aes(fill = ..level..), geom = "polygon")
ggplot(heart_tbl, aes(x=RestingBP, y=MaxHR)) + stat_density_2d(bins=50, aes(fill = ..level..), geom = "polygon")
ggplot(heart_tbl, aes(x=RestingBP, y=MaxHR)) + stat_density_2d(bins=50, aes(fill = ..level..), geom = "polygon", type="viridis")
ggplot(heart_tbl, aes(x=RestingBP, y=MaxHR)) + stat_density_2d(bins=50, aes(fill = ..level..), geom = "polygon")
ggplot(heart_tbl, aes(x=RestingBP, y=MaxHR)) + stat_density_2d(bins=50, aes(fill = ..level..), geom = "polygon") + ylim(c(0,200)) + xlim(c(0,200))
ggplot(heart_tbl, aes(x=RestingBP, y=MaxHR)) + stat_density_2d(bins=50, aes(fill = ..level..), geom = "polygon")
ggplot(heart_tbl, aes(x=MaxHR, y=RestingBP)) + geom_point(size=0.1) + geom_density_2d(col="red")
ggplot(heart_tbl, aes(x=MaxHR, y=RestingBP)) + geom_point(size=0.1) + geom_smooth()
ggplot(heart_tbl, aes(x=RestingBP, y=MaxHR)) + geom_point(size=0.1) + geom_smooth()
ggplot(heart_tbl, aes(x=RestingBP, y=MaxHR)) + geom_point(size=0.1) + geom_density_2d(col="red")
ggplot(heart_tbl, aes(x=MaxHR, y=RestingBP)) + geom_point(size=0.1) + geom_density_2d(col="red")
